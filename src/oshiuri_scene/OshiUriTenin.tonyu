native Math;

p=$pat_uketuke;

angle = 0;
firstRadius = $W * 0.05;
radius = firstRadius;
purunRun = false;
throwFlag = false;
frame = 0;
shotCount = 0;
moveWait = 0;
posAngle = 0;
posRadius = $W * 0.2;
posDir = "right";
hp = 30;

x = $W * 0.5 + cos( posAngle ) * posRadius;
y = $H * 0.3;
scaleX = $W * 0.001;

\purun(){
    if( !purunRun ) return;
    
    rotation = cos( angle ) * radius;

    angle += $W * 0.1;
    if( radius > 0 ) {
        radius += -( $W * 0.0025 );
    } else {
        radius = firstRadius;
        purunRun = false;
    }
}

\throwItem( badItem ){
    if( $difficulty === 0 ) hp = 1;
    else hp = rnd(1, 5);
    new OshiUriItem{ 
        tarX=$W * 0.5, x=x, y=y, 
        itemType=rnd( 3 ), badItem,
        scaleX = $scrScale, hp=hp,
    };
    
    purunRun = true;
    $sound.playSE( $se_out );
    shotCount++;
}

\posChange(){
    if( moveWait === 100 ) $sound.playSE( $se_dash );
    if( moveWait > 100 ){
        if( posDir === "right" && posAngle < 180 ){
            x = $W * 0.5 + cos( posAngle ) * posRadius;
            posAngle++;
        }else if( posDir === "right" && posAngle >= 180  ){
            moveWait = 0;
            shotCount = 0;
            posDir = "left";
        }
        if( posDir === "left" && posAngle > 0 ){
            x = $W * 0.5 + cos( posAngle ) * posRadius;
            posAngle--;
        }else if( posDir === "left" && posAngle <= 0 ){
            moveWait = 0;
            shotCount = 0;
            posDir = "right";
        }
    }
}

\damageUpdate(){
    if( alpha >= 255 ){
        crashBullet = crashTo( Bullet );
        if( crashBullet ) {
            hp--;
            $sound.playSE( $se_coolguydamage );
            crashBullet.die();
        };
    }
}

\dieUpdate(){
    if( hp <= 0 ) die();
}

while( true ){
    
    damageUpdate();
    dieUpdate();
    
    if( shotCount < 4 ){
        if( $difficulty <= 1 && !( frame % 60 ) ) throwItem( true );
        if( $difficulty >= 2 && !( frame % rnd( 24, 60 ) ) ) throwItem( true );
    }else{
        moveWait++;
    }
    
    newAlpha = 255 - cos( 120 * moveWait * 0.01 ) * 255;
    if( newAlpha > 127.5 ) alpha = newAlpha;
    
    posChange();
    purun();
    
    frame++;
    update();
}